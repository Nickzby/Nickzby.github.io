[{"title":"树莓派安装kali","url":"http://funguyblog.top/2021/01/raspi-kali/","content":"简单记一下怎么用树莓派安装kali\n最后更新于2021年1月24日\n准备阶段\n树莓派，这里使用树莓派4B，内存2G\n从官网下载的镜像文件,arm用的，本想着考虑内存就2g，64位的系统不知道能不能带起来，不管了先试试。这里下载的是2020.3\n一根网线\nTF卡，建议&gt;=16G\nwin32Diskimage的烧录软件\nSDformatterha的格式化SD卡的软件\nputty，使用ssh连接kali的软件\n\n安装\n首先下载好镜像文件，2020.3是1.9G的压缩包，解压后大概8、9个G，不放心的可以sha256验证。\n格式化TF卡，我认为可以跳过，但是看别的教程都用SDformatterha格式化，那就按他们说的来，其实我认为插入电脑然后右键的格式化也行。\n使用win32diskimage开始烧录，选择写入，11分钟左右。\n安装进树莓派，连接网线。\n打开网络共享设置，以太网也就是本地连接-属性-ipv4-设置网关-我在这设置的192.168.137.1，子网掩码点一下就行。\n如果出现找不到ip的情况，wlan连接里-属性-ipv4-共享关闭再打开（似乎有刷新作用），之后命令行arp -a,查找ip。\n最后putty连接，端口22。如果出现报错“couldn’t agree a key exchange…”,原来是putty版本太老，官网下载最新的。别人都是用xshell，我看也行，只不过我到期了。\n\n进入系统\n用户名和密码都是kali，以前都是默认root用户，现在2020年革新，初始不再是root用户，需要手动切换sudo su,继续输入默认密码kali\n使用命令行（因为我没连接显示屏）连接wifi，有了这一步基本就走到新世界大门了。这里有链接,节省时间我贴出来。\n\nifconfig          #找到无线网卡，应该都是wlan0ifconfig wlan0 up #启动wifiwpa_passphrase &#123;SSID&#125; &#123;PASSWORD&#125; &gt; /etc/wpa_supplicant/&#123;SSID&#125;.conf                  #其中花括号&#123;&#125;不用加，这一步是添加需要连接的wifi信息wpa_supplicant -i wlan0 -c /etc/wpa_supplicant/&#123;SSID&#125;.conf -B                  #连接无线网，&#123;&#125;依然不用加dhclient wlan0    #分配ip，不清楚为什么要手动，以为都是自动的。ifconfig          #检测连接是否成功\n完成上面的，只是说这次能用wifi，关机重启还是不能连接。\n再附加几个命令\niw wlan0 scan     #扫描无线网络iw wlan0 link     #查看无线状态\nvncserver 设置密码kalikalipriority 在wpa_supplicant中有优先级的意思，数字越大优先级越高network中直接多个设置，有花括号。\n\n换源\n\n添加这些deb http://http.kali.org/kali kali-rolling main non-free contrib\ndeb-src http://http.kali.org/kali kali-rolling main non-free contrib可能会切换到东软，这个源不错。中科大和清华的一些kali-roll似乎软件不够。\nok,以上就是将kali安装进树莓派的全部内容了，还有设置中文、时区等一些其他的问题，我觉得无关紧要。下面开始介绍细节配置问题。\nwifi配置为了不用每次登录都要找网线，或者重新进行一边上面的命令，修改一些配置可达到目的。\ncd /etc/wpa_supplicant/    #进入目录wpa_passphrase &quot;ssid&quot; &quot;12345678&quot; &gt; wpa_supplicant.conf #设置要连接的wifi名称和密码（经测试在更换wifi时会刷新文件配置留下一个最近的wifi）vi /etc/network/interfaces#在文件中添加下面配置auto wlan0allow-hotplug wlan0     #使用wlan0iface wlan0 inet manual #manual在某些教程中换成了dhcpwpa-roam /etc/wpa_supplicant/wpa_supplicant.confiface default inet dhcpreboot\n未完待续。。。\n","categories":["学习"],"tags":["kali","raspberry"]},{"title":"Markdown","url":"http://funguyblog.top/2021/01/simple_markdown/","content":"简单记一下学过的markdown语法，记一些常用的\n# 一级标题  \n一级标题注意使用空格，有6个级别的标题。另外=和-也可以成为标题(水平分割线)，使用5个\n```===\n\n\n加粗**加粗**加粗\n倾斜*倾斜*倾斜  \n斜体加粗***斜体加粗***斜体加粗\n删除线~~删除线~~hello，hi你好  \n换行换行时先两下空格，然后回车  \n空格&amp;nbsp;半角空格\n&nbsp;&nbsp;&nbsp;&nbsp;hello（注意行首缩进了）\n表格| 一个普通标题 | 一个普通标题 | 一个普通标题 || ------ | ------ | ------ || 短文本 | 中等文本 | 稍微长一点的文本 || 稍微长一点的文本 | 短文本 | 中等文本|\n\n\n\n\n一个普通标题\n一个普通标题\n一个普通标题\n\n\n\n\n短文本\n中等文本\n稍微长一点的文本\n\n\n稍微长一点的文本\n短文本\n中等文本\n\n\n\n\n引用&gt; 我说过很多话\n\n我说过很多话\n\n链接[baidu](baidu.com)baidu\n","categories":["学习"],"tags":["markdown"]},{"title":"git简记","url":"http://funguyblog.top/2021/01/ckk86byps00004kvdasqc4140/","content":"其实我也不清楚怎么用，下面的是我找的别人的教程。\n\n首先vscode要安装git, 方便在前者自带的终端操作\n为避免浪费时间，建议直接git bash here直接操作，尤其是远程连接仓库的部分\n另外如果没有反应可以重启vscode，或清理工作树（未知）\n\ngit --version\n查看版本也相当于检查有没有安装git.\n\n在Github或者Gitlab或者码云(应该也行)创建仓库repo,私人或者公开。\n\n在本地创建文件夹mycode(用于和线上绑定，方便同步)\n\n在vscode进入本地文件夹mycodedir \\path\\mycode,并初始化git init\n添加用户名和邮箱，只用注册时用的用户名和邮箱,gitlab使用的是域，注意后缀不是普通的@gitlab.com\n\ngit config --global user.name &quot;myname&quot;git config --global user.email &quot;myname@mymail.com&quot;\n参数--global不建议添加，这意味着全部仓库密钥都会用这个，我没有添加\n\n开始生成密钥，这里使用rsa, 2048位\n\nssh-keygen -t rsa -b 2048 -C &quot;email@example.com&quot;\n之后出现\nGenerating public&#x2F;private rsa key pair.Enter file in which to save the key (&#x2F;home&#x2F;user&#x2F;.ssh&#x2F;id_rsa):\n因为之前没有生成过密钥，默认放置如上位置，此时回车即可，\\.ssh文件夹中将出现两种文件，id_rsa和id_rsa.pub\n\n将id_rsa.pub中的密钥复制粘贴至线上ssh设置中\n绑定本地文件夹和线上仓库\n\ngit remote add mycode git@github.com:myname&#x2F;myrepo.git\n之后的修改便可在本地文件夹操作\n\n可以做一次连接测试\n\nssh -T git@github.com\n\n如果本地文件需要更新，选择拉取\n需要上传云端，先提交保存至本地，然后推送\n\n","categories":["学习"],"tags":["Git"]},{"title":"格式测试","url":"http://funguyblog.top/2021/01/test/","content":"测试这里是摘要\n这里是正文部分hhhhhhhhhh\n\n\n$ \\cos $$ \\pi $  \n…markdown contentnihao","categories":[],"tags":[]},{"title":"使用hexo搭建博客","url":"http://funguyblog.top/2021/01/hexo_blog/","content":"此博客使用hexo搭建，特此记录，以便后续查阅\n文章最后更新于2021年1月24日\n搭建博客参考首先搭建博客基本参考以下两个文档的Hexo+GithubPages 非常简单易行的搭建个人博客使用 Github Pages 和 Hexo 搭建自己的独立博客【超级详细的小白教程】  \n安装程序依次安装Git,Node.js和Hexo\ngit --versionnode -vnpm -v\n首先新建文件夹(D:\\blog_Notes), 以后的文件资源就放在这  \n#安装hexonpm install -g hexo-cli\n初始化# 在D:\\blog_Notes中新建一个Hexo文件夹，然后在后者文件夹中执行命令hexo -init # 配置都在这里\n但是在初始化的时候哟可能出现报错，禁止运行脚本。此时需要更改执行策略。电脑设置里面搜索power，“更改执行策略，以允许本地powershell脚本在未签名的情况下运行”，然后“应用”。\nGithub新建仓库GitHub允许每个用户建立一个这样的仓库（username.github.io），使用github page生成静态博客。\nGit密钥生成git密钥，用于在电脑（免密）连接github，便于在电脑上操作文件然后直接用命令行推给github服务器。\n# 在文件夹(D:\\blog_Notes)中初始化gitgit init#开始配置用户名和邮箱(我没有添加--global参数，不然会全局使用)git config --global user.name &quot;myname&quot;git config --global user.email &quot;myname@mymail.com&quot;#生成密钥ssh-keygen -t rsa -C &quot;email@example.com&quot;\n经过最后一步，如果之前没有在C:\\User\\username/.ssh(默认文件夹)目录下生成过密钥，直接三次回车即可，在默认文件夹生成默认密钥id_rsa和公钥id_rsa.pub，之后将公钥内容复制，在Github的setting中，找到SSH and GPG keys,起个名字然后粘贴进去。当然你可以改名(考虑到之前有在此文件夹中放过密钥)，但是需要在该目录(C:\\User\\username/.ssh)下额外添加文件config(没有后缀)，指明该密钥用于github\n#####################################Host github.comHostName github.comPreferredAuthentications publickeyIdentityFile C:/Users/username/.ssh/git_blog# 注意我写的是username,别忘记替换电脑用户名。#####################################\n然后测试连接\nssh git@github.com出现hi xxx 说明连接成功。\nHexo 本地上线hexo n title   # 创建新文章，默认使用posthexo clean     # 清理缓存hexo g         # 生成文件hexo d         # 用于部署到github上hexo g -d      # 联合处理（hexo s         # 本地上线，可在本地查看\n至此，一个搭建在本地的博客基本诞生，使用的默认主题。本地由于在_config.yml站点全局配置文件中将post_asset_folder更改为true，那么在生成新文章时会出现与文章同名的文件夹，可将需要引用的资源（比如图片）放置其中，方便引用（后文还会讲）。\nHexo 上线首先在全局站点配置文件_config.yml中修改deploy\ndeploy:  type: git  repo: git@github.com:username&#x2F;username.github.io.git  branch: main\ntype是使用git的方式，repo是连接该仓库位置，branch在很多的教程是master，但是github紧跟时事修改为main，不然无法上传。注意：，冒号后空格，不然无法正常运行。随后运行hexo d -g,文件上传至github，开始部署，username.github.io，博客就上线了。\n修改主题使用的是默认主题，在之后可能折腾主题的时间比写博客的时间还要多。这是官方主题自由选择。注意在下载主题后保存至theme文件夹中，在全局站点配置文件_config.yml中修改主题名称(同theme中的文件名)这里安装的是npm install hexo-theme-kaze直接安装，但是没有在theme文件夹中，而是在node_module中，之后的配置文件在这里继续运行\nhexo cleanhexo ghexo d\n其他问题安装速度可能在前面使用npm安装软件速度很慢，可以使用修改源的方法（自行百度）,也可以使用npm install  xxxx --save --registry=https://registry.npm.taobao.org,临时使用淘宝的仓库，也用不着永久的修改源。\n数学公式默认使用的渲染器是marked,需要卸载安装另一个\nnpm uninstall hexo-renderer-marked -S # 卸载npm install hexo-renderer-kramed -S   # 安装新的\n在主题配置文件中选择latex: true和engine: mathjax。以后在需要数学渲染的文章中加上latex:true,加快渲染速度，避免不需要渲染的文章也用引擎。\n插入图片找了一个教程不能简单的像markdown使用相对路径插入图片。官方给出三种方法，我选择教程的方法。npm install hexo-asset-image --save然后在站点_config.yml文件中，打开post_asset_folder.打开/node_modules/hexo-asset-image/index.js,将文件更换，不然好像会出现bug。之后再写文章时，新建文章会出现和文章同名的文件夹，将需要引用的图片放进去就行了，格式如下\n![图片](head.jpeg)\n不过我也在考虑图床，以后可以用用又找到了新的方式，就放在/image文件夹里，如上的格式引用即可，注意加上/image，另外注意后缀名字，.png变成大写.PNG\n配置域名在阿里购买的域名，凑合用。在域名解析里添加两个记录，两个记录类型都是CNAME,第一个的主机记录为@,第二个的主机记录为www,记录值都是博客地址（username.github.io）,然后保存，可能需要等1分钟左右。最后还要在根目录里添加文件CNAME,文件内容就简单填写一行域名example.com即可,加不加www都行。没反应了在source文件夹里再添加一次这个文件\n声明链接中文正在整理。。。不显示中文了，在站点配置中修改变更为hash值，就没有那么多%了。\n","categories":["学习"],"tags":["Hexo","blog","Git"]},{"title":"Hello World","url":"http://funguyblog.top/2021/01/ckk56sbv20001xkvd8ukt7g9r/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\nMore info: Writing\nRun server$ hexo server\nMore info: Server\nGenerate static files$ hexo generate\nMore info: Generating\nDeploy to remote sites$ hexo deploy\nMore info: Deployment\n","categories":[],"tags":[]}]