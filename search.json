[{"title":"未选择的路","url":"http://funguyblog.top/2021/01/The-Road-Not-Taken/","content":"记录曾经背的很熟诗\n最后更新于2021年1月26日\n这首诗背的很熟，因为在背这首诗的前一年我就做过2选1的选择。可能引起了共鸣吧，也是这首诗，在我后来也帮我做了很多选择。其实很多情况下我已经知道要选什么了，可能是贪婪，感觉会有更好的？也可能是害怕什么吧，害怕走的不是自己喜欢的路，会后悔。该怎么办？走“人迹更少的一条”。\n未选择的路作者： 弗罗斯特  \n黄色的树林里分出两条路，可惜我不能同时去涉足，我在那路口久久伫立，我向着一条路极目望去，直到它消失在丛林深处。\n但我却选了另外一条路，它荒草萋萋，十分幽寂，显得更诱人，更美丽；虽然在这条小路上，很少留下旅人的足迹。\n那天清晨落叶满地，两条路都未经脚印污染。啊，留下一条路等改日再见！但我知道路径延绵无尽头，恐怕我难以再回返。\n也许多少年后在某个地方，我将轻声叹息将往事回顾：一片树林里分出两条路————而我选择了人迹更少的一条，从此决定了我一生的道路。  \n","categories":["摘抄"],"tags":["poem"]},{"title":"树莓派-项目","url":"http://funguyblog.top/2021/01/rasp-project/","content":"曾经做的树莓派项目，也是学校的项目，和电台、小车结合\n最后更新于2021年1月24日\n关于EMORO2560板子的一些参数\n三脚IO口最左侧接地，中间应该是VCC，右侧是可控的高低电平输入输出。\nSERVO最左侧接地\nADC左侧接\nGPP左侧接地\nPWM  2x6接口左下为坐标（1,1）点，(1,1)PWM_0 (1,2)是PWM_1 (2,1)是PWM_2  (2,2)是PWM_3 ,(3,1)是PWM_4, (3,2)PWM_5。（6，1）和（5，2）接地\nISP右上角接地\nJTAG左上和右上角接地I2C，最左侧接地\n\nPWM\nPWM全称Pulse width modulation，脉冲宽度调制。输出不同宽度的矩形波。emoro2560上的pwm频率是500Hz，周期2ms，可用来输出普通电平，比如呼吸灯。但是并不匹配常用舵机，比如TS90A，此类舵机适用周期20ms的。\n曾想过用IO，控制时间输出高低电平，达到pwm的目的，然而delay()和delaymicroseconds()函数似乎都不允许，或者说无法控制的那么精准。或许需要更改ATmega的参数，网上有类似教程，过于麻烦。遂改用servo，虽然鬼畜，不够顺滑，效果勉强。\nanalogwirte()\n\nRGB 灯\n使用PWM控制（0-255），可做成呼吸灯，IO等其他的接口也可使用，只有高低，对应暗亮，不够灵活。三色不同组合叠加显示不同颜色。\n实际运行过快，建议用delay（10）延时。\nfor语句执行。\n\n舵机\nTS90A\n舵机棕色的线接，中间的是vcc，橘色的是高低电平输入输出。\n高低不同的占空比用来控制转动方向，50%时居中，理论应是180°，实际比这个角度大，考虑到使用SERVO控制（50-2500，1500停止）的，也没细查，索性也就2500最大，500最小。\n\nBluetooth\n默认密码0000，user: emoro2560\n每次开机就打开了，自动初始化。似乎串口每次接受1个（或一次）字符，所以使用遥感控制有待商榷，不排除这个可能。\n通过手机向其发送字符。Serival1。大多数教程都是serival，应该注意。\n\nRaspberry摄像头\n有点复杂\n不过比起舵机还是小事，起码有代码能参考一点。\n本次使用的CSI接口的摄像头（一排线），区别于USB接口。安装时切记断电。\n配置什么的就不用说了，保险起见使用3B，并且系统也是老的。\n\n\n首先打开配置使摄像头处于enable。sudo raspi-config\n可以进行拍照raspistill -t 20000 -o image.jpg -rot 180 -w 1024 -h 768 -q 8 -t 20000 -tl 5000 -v-t 20000是延时20秒-t1 5000间隔五秒拍摄一张-o image.jpg是保存图片名称-rot 180镜头反转180°-w 1024 -h 768自定义宽高-q图像质量，似乎8质量还行-v运行摄像头时输出详细信息  \n\n视频流分情况使用。首先使用（linux）arp -a和ifconfig判断本机当前的局域网地址IP。一个作为主机。这里总是默认192.168.XXX.XXX，根据情况判断。默认端口都是8080\n\n下载源码git clone https://github.com/jacksonliam/mjpg-streamer.git\n\n下载依赖包  \n\n\nsudo apt-get install libjpeg8-dev\nsudo apt-get install cmake\n\n编译\n\n有又出现warning的可能，建议sudo执行)\ncd mjpg-streamer-master/mjpg-streamer-experimental\nmake clean all\n\n添加摄像头，因为需要在网页视频流中启用摄像头。而摄像头仅仅可以拍照和拍摄简单视频，并不能达到实时监控的效果，另外ls /dev 没有video0。chmod 777 /etc/modules\n\n改变文档权限。在该文档最后一行添加bcm2835-v4l2重启sudo halt\n\n有mjpg和vlc两种方式，后者有些麻烦，反正没实现。这次使用前者。\ncd mjpg-streamer-master/mjpg-streamer-experimental\n./mjpg_streamer -i \"./input_raspicam.so\" -o \"./output_http.so -w ./www\"\n可改变一些参数i &quot;./input_raspicam.so -fps 60 -x 320 -y 240&quot;-p 80改变端口暂时就这么多吧\n\n","categories":["树莓派"],"tags":["raspberry"]},{"title":"树莓派-FM电台","url":"http://funguyblog.top/2021/01/rasp-FM/","content":"曾经做过的项目，使用树莓派做成小电台，播放声音。\n最后更新于2021年1月24日\n树莓派-FM电台使用树莓派3B，系统使用jessie。使用树莓派4及buster最新系统暂时不行。有一些莫名奇怪的文件错误（库文件不存在，函数warning等）。当然也有可能是文件依赖的问题，通过使用树莓派实验室方法发现sndfile文件依赖问题（也是主要问题）\n官方常规方法该小软件依赖sndfile库，首先安装该库：sudo apt-get install libsndfile1-dev  \n接下来克隆软件的源码  \ngit clone https://github.com/ChristopheJacquet/PiFmRds.git\ncd PiFmRds/src      # 切换目录\nmake clean          # 清楚关联文件\nmake                # 编译处理\n编译完成后，输入以下命令运行程序sudo ./pi_fm_rds -audio sound.wav此时就会在树莓派的GPIO 4 (40针P1接口的第7管脚)上产生FM发射波，默认频率107.9,默认音频sound.wav加入参数-freq可定义发射频率 以MHz为单位-audio指定一个音频文件作为音频播放。如果提供立体声文件，则Pi-FM-RDS将产生FM立体声信号。例如：-audio sound.wav。支持的格式取决于libsndfile。这包括WAV和Ogg / Vorbis（等），但不包括MP3。-pi指定RDS广播的PI代码。4个十六进制数字。例如：-pi FFFF。-ps指定RDS广播的电台名称（节目服务名称，PS）。限制：8个字符。例如：-ps RASP-PI。-rt指定要传输的无线文本（RT）。限制：64个字符。例如：-rt ‘Hello, world!’。-ctl指定一个命名管道（FIFO）作为控制通道在运行时改变PS和RT（见下文）。-ppm 以百万分率（ppm）为单位指定树莓派的振荡器误差。可增加杜邦线，增大发射范围。\n树莓派实验室(参考)方法以下安装必要组件，文件依赖。\nhttp://pan.baidu.com/s/1kV2G9Vp     #先下载这个百度云文件  上传至树莓派\ntar -xvzf libsndfile-1.0.25.tar.gz  #解压缩包\ncd libsndfile-1.0.25                #进入目录\n./configure                         #配置文件\nmake                                #编译文件\nmake install                        #安装\n剩下的与常规方法相同\ngit clone https://github.com/ChristopheJacquet/PiFmRds.git\ncd PiFmRds/src\nmake clean\nmake\n引用树莓派实验室\ngithub文件\n","categories":["树莓派"],"tags":["raspberry","电台"]},{"title":"树莓派常用命令","url":"http://funguyblog.top/2021/01/rasp-command/","content":"树莓派常用的命令，因为系统原因，可以用其他linux相关命令\n最后更新于2021年1月24日\n树莓派常用命令以下记录树莓派常用的命令，因为系统原因，可以用其他linux相关命令。因为曾经做的项目（树莓派电台）的原因，我这里记录了当时需要用的命令。\n常用命令sudo -i                #在树莓派中将一直以管理员身份运行\nlogout                 #退出管理员身份\nsudo raspi-config      #打开树莓派设置\nsudo halt              #合理关闭运行的后台，然后关机。 推荐使用\nsudo reboot            #关机重启\nsudo apt-get update    #检查更新软件\nsudo apt-get upgrade   #检查更新软件  一套使用\ncd                     #切换目录\n./                     #运行程序  考虑实际，建议加上sudo 不然会提示权限不够,permission denied\nsudo nano /Desktop/x.txt #打开编辑文件\nlsusb                  #设备情况\n声卡配置lsusb                   #设备情况\nalsamixer               #打开设置界面，可调声音，切换声卡\nspeaker-test -Dplughw:CARD=Device -c2 -twav\n其中-D选项按设备名称plughw:CARD=Device选定USB声卡，-c2是左右双声道，-twav选定播放.wav声音文件，如果没有指定.wav声音文件名，则播放缺省的声音。left right\n录制声音arecoed -Dplughw:CARD=Device -fcd -c2 -twav test.wav可以使用arecord命令录制音频，然后使用aplay命令回放，-D选项按名称选定设备，-f选项设定音频格式，-c选项是声道数，-t选项是音频文件格式，详细选项设置内容可使用man查看。\n播放声音aplay -Dplughw:CARD=Device test.wav\n其他采集回放方式alsaloop -Cplughw:CARD=Device -Pplughw:CARD=ALSA,DEV=0使用alsaloop命令将所采集音频回放，-C选项是采集设备，-P选项是回放设备.  USB声卡采集，树莓派集成音频设备回放。\n","categories":["树莓派"],"tags":["raspberry"]},{"title":"树莓派初始配置","url":"http://funguyblog.top/2021/01/raspberry_init/","content":"使用官方系统对树莓派进行初始配置\n最后更新于2021年1月24日\n树莓派初始配置如果不是树莓派硬件的要求，个人建议使用最新版的前一版，防止有各种文件库、依赖的问题。\n• 推荐闪存卡，普通的也不是不行，但是在更新软件时，肉眼可见的读写速度没有闪存卡快。• win32diskimage.exe 烧录镜像文件到u盘。• roob系统说是很简单，但也没成功过打开，也许是没有合格的显示器吧。（独立的显示器，非笔记本屏幕）\nWindows 安装①putty 和②vnc。①没办法，刚需软件，还没见过哪个视频没用这个。ssh方式连接。②可以让带有桌面系统的树莓派显示在电脑显示屏上。• 使用的是网线连接。暂时还没用无线网。• 在内存卡里建一个名为ssh空文档，没有后缀。可以默认打开ssh。• 打开网络共享中心，打开无线网的属性，允许以太网（也就是其他网）的数据通过无线网。用来联网• 打开有线网的属性，在ipv4配置手动获得ip地址。192.168.137.1  接着的一行点一下就会出现255.255.255.0（子网掩码，这个没搞明白为啥，不讨论）。2019年11月25日更新：在旧版的树莓派中好像没有影响，比如我在cmdline.txt 中将原来的ip = 192.168.137.9删除，不影响连接  只是之后连接可能每次都要重新找一次，有点麻烦。\n• 打开putty，连接名192.168.137.xxx   默认端口是22。• 树莓派默认用户是pi，默认密码是raspberry。建议vnc设置密码相同。• 使用sudo raspi-config打开设置，在advance option 里打开vnc(enable)• 打开vnc使用命令vncserver。没有安装使用命令sudo apt-get install tightvncserver安装。• 高清显示（比如1080p）什么的需要HDMI线连接，普通网线不够。• 安装谷歌中文输入法(网上其他版本的看着很糙)\nsudo apt-get install fcitx fcitx-googlepinyin fcitx-module-cloudpinyin fcitx-sunpinyin\n• 之后重启。• 这其中还有用户登陆配置（默认登陆），还有WiFi网络配置，之后写。初始就这样，够用了。\n","categories":["树莓派"],"tags":["raspberry","配置"]},{"title":"树莓派安装kali","url":"http://funguyblog.top/2021/01/raspi-kali/","content":"简单记一下怎么用树莓派安装kali\n最后更新于2021年1月24日\n准备阶段\n树莓派，这里使用树莓派4B，内存2G\n从官网下载的镜像文件,arm用的，本想着考虑内存就2g，64位的系统不知道能不能带起来，不管了先试试。这里下载的是2020.3\n一根网线\nTF卡，建议&gt;=16G\nwin32Diskimage的烧录软件\nSDformatterha的格式化SD卡的软件\nputty，使用ssh连接kali的软件\n\n安装\n首先下载好镜像文件，2020.3是1.9G的压缩包，解压后大概8、9个G，不放心的可以sha256验证。\n格式化TF卡，我认为可以跳过，但是看别的教程都用SDformatterha格式化，那就按他们说的来，其实我认为插入电脑然后右键的格式化也行。\n使用win32diskimage开始烧录，选择写入，11分钟左右。\n安装进树莓派，连接网线。\n打开网络共享设置，以太网也就是本地连接-属性-ipv4-设置网关-我在这设置的192.168.137.1，子网掩码点一下就行。\n如果出现找不到ip的情况，wlan连接里-属性-ipv4-共享关闭再打开（似乎有刷新作用），之后命令行arp -a,查找ip。\n最后putty连接，端口22。如果出现报错“couldn’t agree a key exchange…”,原来是putty版本太老，官网下载最新的。别人都是用xshell，我看也行，只不过我到期了。\n\n进入系统\n用户名和密码都是kali，以前都是默认root用户，现在2020年革新，初始不再是root用户，需要手动切换sudo su,继续输入默认密码kali\n使用命令行（因为我没连接显示屏）连接wifi，有了这一步基本就走到新世界大门了。这里有链接,节省时间我贴出来。\n\nifconfig          #找到无线网卡，应该都是wlan0\nifconfig wlan0 up #启动wifi\nwpa_passphrase &#123;SSID&#125; &#123;PASSWORD&#125; > /etc/wpa_supplicant/&#123;SSID&#125;.conf\n                  #其中花括号&#123;&#125;不用加，这一步是添加需要连接的wifi信息\nwpa_supplicant -i wlan0 -c /etc/wpa_supplicant/&#123;SSID&#125;.conf -B\n                  #连接无线网，&#123;&#125;依然不用加\ndhclient wlan0    #分配ip，不清楚为什么要手动，以为都是自动的。\nifconfig          #检测连接是否成功\n完成上面的，只是说这次能用wifi，关机重启还是不能连接。\n再附加几个命令\niw wlan0 scan     #扫描无线网络\niw wlan0 link     #查看无线状态\nvncserver 设置密码kalikalipriority 在wpa_supplicant中有优先级的意思，数字越大优先级越高network中直接多个设置，有花括号。\n\n换源\n\n添加这些deb http://http.kali.org/kali kali-rolling main non-free contrib\ndeb-src http://http.kali.org/kali kali-rolling main non-free contrib可能会切换到东软，这个源不错。中科大和清华的一些kali-roll似乎软件不够。\nok,以上就是将kali安装进树莓派的全部内容了，还有设置中文、时区等一些其他的问题，我觉得无关紧要。下面开始介绍细节配置问题。\nwifi配置为了不用每次登录都要找网线，或者重新进行一边上面的命令，修改一些配置可达到目的。\ncd /etc/wpa_supplicant/    #进入目录\nwpa_passphrase \"ssid\" \"12345678\" > wpa_supplicant.conf \n#设置要连接的wifi名称和密码（经测试在更换wifi时会刷新文件配置留下一个最近的wifi）\nvi /etc/network/interfaces\n\n#在文件中添加下面配置\nauto wlan0\nallow-hotplug wlan0     #使用wlan0\niface wlan0 inet manual #manual在某些教程中换成了dhcp\nwpa-roam /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp\nreboot\n未完待续。。。\n","categories":["树莓派"],"tags":["raspberry","kali"]},{"title":"Markdown","url":"http://funguyblog.top/2021/01/simple_markdown/","content":"简单记一下学过的markdown语法，记一些常用的\n# 一级标题  \n一级标题注意使用空格，有6个级别的标题。另外=和-也可以成为标题(水平分割线)，使用5个\n```===\n\n\n加粗**加粗**加粗\n倾斜*倾斜*倾斜  \n斜体加粗***斜体加粗***斜体加粗\n删除线~~删除线~~hello，hi你好  \n换行换行时先两下空格，然后回车  \n空格&amp;nbsp;半角空格\n&nbsp;&nbsp;&nbsp;&nbsp;hello（注意行首缩进了）\n表格| 一个普通标题 | 一个普通标题 | 一个普通标题 |\n| ------ | ------ | ------ |\n| 短文本 | 中等文本 | 稍微长一点的文本 |\n| 稍微长一点的文本 | 短文本 | 中等文本|\n\n\n\n\n一个普通标题\n一个普通标题\n一个普通标题\n\n\n\n\n短文本\n中等文本\n稍微长一点的文本\n\n\n稍微长一点的文本\n短文本\n中等文本\n\n\n\n\n引用&gt; 我说过很多话\n\n我说过很多话\n\n链接[baidu](baidu.com)baidu\n","categories":["学习"],"tags":["markdown"]},{"title":"git简记","url":"http://funguyblog.top/2021/01/ckkrokybm0005ikvd8vo38w8r/","content":"其实我也不清楚怎么用，下面的是我找的别人的教程。\n\n首先vscode要安装git, 方便在前者自带的终端操作\n为避免浪费时间，建议直接git bash here直接操作，尤其是远程连接仓库的部分\n另外如果没有反应可以重启vscode，或清理工作树（未知）\n\ngit --version\n查看版本也相当于检查有没有安装git.\n\n在Github或者Gitlab或者码云(应该也行)创建仓库repo,私人或者公开。\n\n在本地创建文件夹mycode(用于和线上绑定，方便同步)\n\n在vscode进入本地文件夹mycodedir \\path\\mycode,并初始化git init\n添加用户名和邮箱，只用注册时用的用户名和邮箱,gitlab使用的是域，注意后缀不是普通的@gitlab.com\n\ngit config --global user.name \"myname\"\ngit config --global user.email \"myname@mymail.com\"\n参数--global不建议添加，这意味着全部仓库密钥都会用这个，我没有添加\n\n开始生成密钥，这里使用rsa, 2048位\n\nssh-keygen -t rsa -b 2048 -C \"email@example.com\"\n之后出现\nGenerating public&#x2F;private rsa key pair.\nEnter file in which to save the key (&#x2F;home&#x2F;user&#x2F;.ssh&#x2F;id_rsa):\n因为之前没有生成过密钥，默认放置如上位置，此时回车即可，\\.ssh文件夹中将出现两种文件，id_rsa和id_rsa.pub\n\n将id_rsa.pub中的密钥复制粘贴至线上ssh设置中\n绑定本地文件夹和线上仓库\n\ngit remote add mycode git@github.com:myname/myrepo.git\n之后的修改便可在本地文件夹操作\n\n可以做一次连接测试\n\nssh -T git@github.com\n\n如果本地文件需要更新，选择拉取\n需要上传云端，先提交保存至本地，然后推送\n\n","categories":["学习"],"tags":["Git"]},{"title":"格式测试","url":"http://funguyblog.top/2021/01/test/","content":"测试这里是摘要\n这里是正文部分hhhhhhhhhh\n\n\n$ \\cos $$ \\pi $  \n…markdown contentnihao","categories":[],"tags":[]},{"title":"使用hexo搭建博客","url":"http://funguyblog.top/2021/01/hexo_blog/","content":"此博客使用hexo搭建，特此记录，以便后续查阅\n文章最后更新于2021年1月24日\n搭建博客参考首先搭建博客基本参考以下两个文档的Hexo+GithubPages 非常简单易行的搭建个人博客使用 Github Pages 和 Hexo 搭建自己的独立博客【超级详细的小白教程】  \n安装程序依次安装Git,Node.js和Hexo\ngit --version\nnode -v\nnpm -v\n首先新建文件夹(D:\\blog_Notes), 以后的文件资源就放在这  \n#安装hexo\nnpm install -g hexo-cli\n初始化# 在D:\\blog_Notes中新建一个Hexo文件夹，然后在后者文件夹中执行命令\nhexo -init \n# 配置都在这里\n但是在初始化的时候哟可能出现报错，禁止运行脚本。此时需要更改执行策略。电脑设置里面搜索power，“更改执行策略，以允许本地powershell脚本在未签名的情况下运行”，然后“应用”。\nGithub新建仓库GitHub允许每个用户建立一个这样的仓库（username.github.io），使用github page生成静态博客。\nGit密钥生成git密钥，用于在电脑（免密）连接github，便于在电脑上操作文件然后直接用命令行推给github服务器。\n# 在文件夹(D:\\blog_Notes)中初始化git\ngit init\n#开始配置用户名和邮箱(我没有添加--global参数，不然会全局使用)\ngit config --global user.name \"myname\"\ngit config --global user.email \"myname@mymail.com\"\n#生成密钥\nssh-keygen -t rsa -C \"email@example.com\"\n经过最后一步，如果之前没有在C:\\User\\username/.ssh(默认文件夹)目录下生成过密钥，直接三次回车即可，在默认文件夹生成默认密钥id_rsa和公钥id_rsa.pub，之后将公钥内容复制，在Github的setting中，找到SSH and GPG keys,起个名字然后粘贴进去。当然你可以改名(考虑到之前有在此文件夹中放过密钥)，但是需要在该目录(C:\\User\\username/.ssh)下额外添加文件config(没有后缀)，指明该密钥用于github\n#####################################\nHost github.com\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile C:/Users/username/.ssh/git_blog\n# 注意我写的是username,别忘记替换电脑用户名。\n#####################################\n然后测试连接\nssh git@github.com出现hi xxx 说明连接成功。\nHexo 本地上线hexo n title   # 创建新文章，默认使用post\nhexo clean     # 清理缓存\nhexo g         # 生成文件\nhexo d         # 用于部署到github上\nhexo g -d      # 联合处理（\nhexo s         # 本地上线，可在本地查看\n至此，一个搭建在本地的博客基本诞生，使用的默认主题。本地由于在_config.yml站点全局配置文件中将post_asset_folder更改为true，那么在生成新文章时会出现与文章同名的文件夹，可将需要引用的资源（比如图片）放置其中，方便引用（后文还会讲）。\nHexo 上线首先在全局站点配置文件_config.yml中修改deploy\ndeploy:\n  type: git\n  repo: git@github.com:username&#x2F;username.github.io.git\n  branch: main\n\ntype是使用git的方式，repo是连接该仓库位置，branch在很多的教程是master，但是github紧跟时事修改为main，不然无法上传。注意：，冒号后空格，不然无法正常运行。随后运行hexo d -g,文件上传至github，开始部署，username.github.io，博客就上线了。\n修改主题使用的是默认主题，在之后可能折腾主题的时间比写博客的时间还要多。这是官方主题自由选择。注意在下载主题后保存至theme文件夹中，在全局站点配置文件_config.yml中修改主题名称(同theme中的文件名)这里安装的是npm install hexo-theme-kaze直接安装，但是没有在theme文件夹中，而是在node_module中，之后的配置文件在这里继续运行\nhexo clean\nhexo g\nhexo d\n其他问题安装速度可能在前面使用npm安装软件速度很慢，可以使用修改源的方法（自行百度）,也可以使用npm install  xxxx --save --registry=https://registry.npm.taobao.org,临时使用淘宝的仓库，也用不着永久的修改源。\n数学公式默认使用的渲染器是marked,需要卸载安装另一个\nnpm uninstall hexo-renderer-marked -S # 卸载\nnpm install hexo-renderer-kramed -S   # 安装新的\n在主题配置文件中选择latex: true和engine: mathjax。以后在需要数学渲染的文章中加上latex:true,加快渲染速度，避免不需要渲染的文章也用引擎。\n插入图片找了一个教程不能简单的像markdown使用相对路径插入图片。官方给出三种方法，我选择教程的方法。npm install hexo-asset-image --save然后在站点_config.yml文件中，打开post_asset_folder.打开/node_modules/hexo-asset-image/index.js,将文件更换，不然好像会出现bug。之后再写文章时，新建文章会出现和文章同名的文件夹，将需要引用的图片放进去就行了，格式如下\n![图片](head.jpeg)\n不过我也在考虑图床，以后可以用用又找到了新的方式，就放在/image文件夹里，如上的格式引用即可，注意加上/image，另外注意后缀名字，.png变成大写.PNG\n配置域名在阿里购买的域名，凑合用。在域名解析里添加两个记录，两个记录类型都是CNAME,第一个的主机记录为@,第二个的主机记录为www,记录值都是博客地址（username.github.io）,然后保存，可能需要等1分钟左右。最后还要在根目录里添加文件CNAME,文件内容就简单填写一行域名example.com即可,加不加www都行。没反应了在source文件夹里再添加一次这个文件\n声明链接中文正在整理。。。不显示中文了，在站点配置中修改变更为hash值，就没有那么多%了。\n","categories":["学习"],"tags":["Git","Hexo","blog"]},{"title":"Hello World","url":"http://funguyblog.top/2021/01/ckkrokybi0002ikvd1k9286s7/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new \"My New Post\"\nMore info: Writing\nRun server$ hexo server\nMore info: Server\nGenerate static files$ hexo generate\nMore info: Generating\nDeploy to remote sites$ hexo deploy\nMore info: Deployment\n","categories":[],"tags":[]}]